//- Arguments:
	text    {string}  - Text
	mods    {string}  - Mod('s)
	icon    {string}  - Icon name
	link    {string}  - Link
	isInput {boolean} - If is input

//- Call:
	//- Button type 'link'
	+btn({
		text: 'Button',
		mods: 'primary'
		link: '#',
	})

	//- Button type 'input'
	+btn({
		text: 'Button',
		mods: 'secondary',
		isInput: 'true'
	})

	//- Button type 'button'
	+btn({
		text: 'Button',
		mods: 'text'
		icon: 'arrow-right',
	})

	//- Icon button
	+btn({
		mods: 'primary',
		icon: 'bell',
	})

//- Button
mixin btn(data)
	-
		let modsArray = '';

		if(typeof(data.mods) !== 'undefined' && data.mods) {
			const modsList = data.mods.split(',');

			for (let i = 0; i < modsList.length; i++) {
				if (typeof(data.icon) !== 'undefined' && typeof(data.text) === 'undefined') {
					modsArray = `${modsArray} btn__icon-${modsList[i].trim()}`;

				} else {
					modsArray = `${modsArray} btn__${modsList[i].trim()}`;
				}
			}
		}

	//- If argument 'link' not empty — is link
	if (typeof(data.link) !== 'undefined')
		//- If the button has an icon
		if (typeof(data.icon) !== 'undefined' && typeof(data.text) !== 'undefined')
			a.btn(class=modsArray, href=data.link)&attributes(attributes)!= data.text
				+icon-mono(data.icon)
				block

		//- If the button has only an icon
		else if (typeof(data.icon) !== 'undefined' && typeof(data.text) === 'undefined')
			a.btn__icon(class=modsArray)&attributes(attributes)
				+icon-mono(data.icon)
				block

		else
			a.btn(class=modsArray, href=data.link)&attributes(attributes)!= data.text
				block

	//- If 'isInput' argument is true — is input
	else if (typeof(data.isInput) !== 'undefined')
		//- If the button has an icon
		if (typeof(data.icon) !== 'undefined' && typeof(data.text) !== 'undefined')
			label.btn(class=modsArray)
				input.btn(value=data.text, type='button', style='background-color: transparent')&attributes(attributes)
				+icon-mono(data.icon)

		//- If the button has only an icon
		else if (typeof(data.icon) !== 'undefined' && typeof(data.text) === 'undefined')
			label.btn__icon(class=modsArray)
				input(value=data.text, type='button')&attributes(attributes)
				+icon-mono(data.icon)

		else
			input.btn(class=modsArray, value=data.text, type='button')&attributes(attributes)

	//- Just button
	else
		//- If the button has an icon
		if (typeof(data.icon) !== 'undefined' && typeof(data.text) !== 'undefined')
			button.btn(class=modsArray)&attributes(attributes)!= data.text
				+icon-mono(data.icon)
				block

		//- If the button has only an icon
		else if (typeof(data.icon) !== 'undefined' && typeof(data.text) === 'undefined')
			button.btn__icon(class=modsArray)&attributes(attributes)
				+icon-mono(data.icon)
				block

		else
			button.btn(class=modsArray)&attributes(attributes)!= data.text
				block
