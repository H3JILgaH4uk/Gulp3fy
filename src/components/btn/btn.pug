//- Arguments:
	text    {string}  - Text
	mods    {string}  - Mod('s)
	link    {string}  - Link
	icon    {string}  - Icon name
	iconPos {string}  - Set icon position: before / after [Default: 'after']
	isMulti {boolean} - Set icon type: multi [Default: false]

//- Call:
	//- Button type 'link'
	+btn({
		text: 'Button',
		mods: 'primary'
		link: '#',
	})

	//- Button type 'button'
	+btn({
		text: 'Button',
		mods: 'light'
		icon: 'play',
		iconPos: 'before',
	})

	//- Icon button
	+btn({
		mods: 'primary',
		icon: 'bell',
	})

//- Button
mixin btn(data)
	-
		let modsArray = '';

		if(data.mods) {
			const modsList = data.mods.split(',');

			for (let i = 0; i < modsList.length; i++) {
				modsArray = `${modsArray}${!data.text && data.icon ? 'btn-icon__' : 'btn__'}${modsList[i].trim()}`;
			}
		}

	//- Button type: link
	if data.link
		//- Icon
		if (!data.text && data.icon)
			a.btn-icon(class=modsArray)&attributes(attributes)
				+icon(data.icon, data.isMulti)

		//- Text
		else
			a.btn(class=modsArray, href=data.link)&attributes(attributes)
				if data.icon
					if (data.iconPos === 'before')
						+icon(data.icon, data.isMulti)
						span!= data.text

					else
						span!= data.text
						+icon(data.icon, data.isMulti)
				else
					span!= data.text

	//- Button type: button
	else
		//- Icon
		if (!data.text && data.icon)
			button.btn-icon(class=modsArray)&attributes(attributes)
				+icon(data.icon, data.isMulti)

		//- Text
		else
			button.btn(class=modsArray)&attributes(attributes)
				if data.icon
					if (data.iconPos === 'before')
						+icon(data.icon, data.isMulti)
						span!= data.text

					else
						span!= data.text
						+icon(data.icon, data.isMulti)
				else
					span!= data.text
