//- Arguments:
	text    {string}  - Text
	mods    {string}  - Mod('s)
	link    {string}  - Link
	icon    {string}  - Icon name
	iconPos {string}  - Set icon position: before / after [Default: 'after']
	isMulti {boolean} - Set icon type: multi [Default: false]

//- Call:
	//- Button type 'link'
	+btn({
		text: 'Button',
		mods: 'primary'
		link: '#',
	})

	//- Button type 'button'
	+btn({
		text: 'Button',
		mods: 'light'
		icon: 'play',
		iconPos: 'before',
	})

	//- Icon button
	+btn({
		mods: 'primary',
		icon: 'bell',
	})

//- Button
mixin btn(data)
	-
		let modsArray = '';

		if(data.mods) {
			const modsList = data.mods.split(',');

			for (let i = 0; i < modsList.length; i++) {
				modsArray = `${modsArray}${!data.text && data.icon ? 'btn-icon__' : 'btn__'}${modsList[i].trim()}`;
			}
		}

	#{data.link ? 'a' : 'button'}(
		class=!data.text && data.icon ? `btn-icon ${modsArray}` : `btn ${modsArray}`,
		href=data.link ? data.link : null,
		type=!data.link ? 'button' : null
	)&attributes(attributes)
		if (data.icon)
			if (data.iconPos === 'before')
				+icon(data.icon, isMulti)
				if data.text
					span= data.text

			else
				if data.text
					span= data.text
				+icon(data.icon, isMulti)

		else
			span= data.text
