//- Arguments:
	text    {string}  - Button text
	mods    {string}  - Mod('s)
	icon    {string}  - Icon name
	link    {string}  - Link
	label   {string}  - Aria-label text
	isMulti {boolean} - Set icon type: multi [Default: false]

//- Call:
	+pagination({})
		+pagination-item({ mods: 'prev', link: '#', icon: 'arrow-2-left' }).--disabled
		+pagination-item({ text: '1', link: '#' }).--current
		+pagination-item({ text: '2', link: '#' })
		+pagination-item({ text: '3', link: '#' })
		+pagination-item({})
		+pagination-item({ text: '8', link: '#' })
		+pagination-item({ text: '9', link: '#' })
		+pagination-item({ text: '10', link: '#' })
		+pagination-item({ mods: 'next', link: '#', icon: 'arrow-2-right' })

mixin pagination(data)
	-
		let modsArray = '';

		if (data.mods) {
			const modsList = data.mods.split(',');

			for (let i = 0; i < modsList.length; i++) {
				modsArray = `${modsArray} ${modsList[i].trim()}__pagination`;
			}
		}

	nav.pagination(class=modsArray, aria-label=(data.label = 'Page navigation'))&attributes(attributes)
		ul.pagination__inner
			block

mixin pagination-item(data)
	-
		let modsArray = '';

		if (data.mods) {
			const modsList = data.mods.split(',');

			for (let i = 0; i < modsList.length; i++) {
				modsArray = `${modsArray} pagination__btn-${modsList[i].trim()}`;
			}
		}

	li.pagination__item
		if (data.text || data.icon)
			a.pagination__btn(class=modsArray, href=data.link)&attributes(attributes)
				//- Type: text
				if data.text
					!= data.text

				//- Type: icon
				else if (data.icon && !data.text)
					+icon(data.icon, data.isMulti)
		else
			span.pagination__dots&attributes(attributes) ...
