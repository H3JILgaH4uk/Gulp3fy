//- Arguments:
	mods        {string} - Mod('s)
	media       {string} - Media queries '[size],[min/max]'
	isAccordion 'true'   - Enable accordion mode
	title       {string} - Spoiler title

//- Call:
	### With accordion mode
	+spoiler({
		mods: 'hero',
		isAccordion: 'true'
	})
		+spoiler-item('Spoiler title')
			...

	### Default spoiler
	+spoiler({ mods: 'hero' })

	### With media queries
	+spoiler({
		mods: 'hero',
		media: '840,min'
	})

	### With accordion mode and media queries
	+spoiler({
		mods: 'hero',
		isAccordion: 'true',
		media: '840,max'
	})

mixin spoiler(data)
	-
		let modsArray = '';

		if(typeof(data.mods) !== 'undefined' && data.mods) {
			const modsList = data.mods.split(',');

			for (let i = 0; i < modsList.length; i++) {
				modsArray = `${modsArray} ${modsList[i].trim()}__spoiler`;
			}
		}

	//- If accordion mode is disabled and there are no media queries
	if (typeof(data.isAccordion) === 'undefined' && typeof(data.media) === 'undefined')
		.spoiler(class=modsArray, data-spoilers='')&attributes(attributes)
			block

	//- If accordion mode is disabled but there are media queries
	else if (typeof(data.isAccordion) === 'undefined' && typeof(data.media) !== 'undefined')
		.spoiler(class=modsArray, data-spoilers=data.media)&attributes(attributes)
			block

	//- If accordion mode is enabled and there are media queries
	else if (typeof(data.isAccordion) !== 'undefined' && typeof(data.media) !== 'undefined')
		.spoiler(class=modsArray, data-spoilers=data.media, accordion='')&attributes(attributes)
			block

	//- If accordion mode is enabled and there are no media queries
	else
		.spoiler(class=modsArray, data-spoilers='', accordion='')&attributes(attributes)
			block

mixin spoiler-item(title)
	.spoiler__item
		button.spoiler__title(tabinxex='-1', type='button', data-spoiler='')&attributes(attributes)= title
		.spoiler__content
			block
