// Breackpoints map
$breakpoints: (
	xs:  320 - 0.2,
	sm:  576 - 0.2,
	md:  768 - 0.2,
	lg:  992 - 0.2,
	xl:  1200 - 0.2,
	xxl: 1400 - 0.2,
);

$offsetMax: 20;
$offsetMin: 10;
$maxWidth:  1920;
$container: 1324 + ($offsetMax * 2);

// Media queries mixins
@mixin media-min($key) {
	@if map-has-key($breakpoints, $key) {
		$breakpoint: map-get($breakpoints, $key);

		@media (min-width: em($breakpoint)) {
			@content;
		}
	} @else {
		@media (min-width: em($key)) {
			@content;
		}
	}

}

@mixin media-max($key) {
	@if map-has-key($breakpoints, $key) {
		$breakpoint: map-get($breakpoints, $key);

		@media (max-width: em($breakpoint)) {
			@content;
		}
	} @else {
		@media (max-width: em($key)) {
			@content;
		}
	}

}

@mixin media-minmax($key1, $key2) {
	$breakpointMin: map-get($breakpoints, $key1);
	$breakpointMax: map-get($breakpoints, $key2);
	@if map-has-key($breakpoints, $key1) and map-has-key($breakpoints, $key2) {
		@media (min-width: em($breakpointMin)) and (max-width: em($breakpointMax)) {
			@content;
		}
	} @else if map-has-key($breakpoints, $key1) and not map-has-key($breakpoints, $key2) {
		@media (min-width: em($breakpointMin)) and (max-width: em($key2)) {
			@content;
		}
	} @else if map-has-key($breakpoints, $key2) and not map-has-key($breakpoints, $key1) {
		@media (min-width: em($key1)) and (max-width: em($breakpointMax)) {
			@content;
		}
	} @else {
		@media (min-width: em($key1)) and (max-width: em($key2)) {
			@content;
		}
	}

}

@mixin media-hover {
	@media (any-hover: hover) {
		@content;
	}
}

// Adaptive mixin
@mixin adaptive($property, $maxValue, $minValue, $mode: 1) {
	$addSize: $maxValue - $minValue;

	// Max width
	@if $mode == 1 {
		#{$property}: rem($maxValue);

		@media (max-width: #{em($container)}) {
			#{$property}: calc(#{$minValue + px} + #{$addSize} * ((100vw - 320px) / #{$container - 320}));
		}

		// Min width
	} @else if $mode == 2 {
		#{$property}: rem($maxValue);

		@media (min-width: #{em($container)}) {
			#{$property}: calc(
				#{$minValue + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
			);
		}

		// Always
	} @else {
		#{$property}: calc(#{$minValue + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
