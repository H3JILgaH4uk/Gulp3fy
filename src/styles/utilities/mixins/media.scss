@use 'sass:map';
@use 'utilities/functions/convert';

$_breakpoints: (
	xs: 0,
	sm: 576,
	md: 768,
	lg: 992,
	xl: 1200,
	xxl: 1400,
);

/// * @media (min-width: value) {}
///
/// @param {key|number} $key - Breakpoint key
/// @example @include media.min(lg) {}
/// @example @include media.min(992) {}

@mixin min($key) {
	@media (min-width: convert.em(map.get($_breakpoints, $key))) {
		@content;
	}
}

/// * @media (max-width: value]) {}
///
/// @param {key|number} $key - Breakpoint key
/// @example @include media.max(lg) {}
/// @example @include media.min(992) {}

@mixin max($key) {
	@media (max-width: convert.em(map.get($_breakpoints, $key) - 0.2)) {
		@content;
	}
}

/// * @media (min-width: value and max-width: value) {}
///
/// @param {key|number} $key1 - Breakpoint key at min-width
/// @param {key|number} $key2 - Breakpoint key at max-width
/// @example @include media.minmax(md, xl) {}
/// @example @include media.minmax(768, 1200) {}

@mixin minmax($key1, $key2) {
	$_breakpointMin: convert.em(map.get($_breakpoints, $key1));
	$_breakpointMax: convert.em(map.get($_breakpoints, $key2) - 0.2);

	@media (min-width: $_breakpointMin) and (max-width: $_breakpointMax) {
		@content;
	}
}

/// * @media (any-hover: hover) {}
///
/// @example @include media.hover {}

@mixin hover {
	@media (any-hover: hover) {
		&:hover:not(:active) {
			@content;
		}
	}
}
